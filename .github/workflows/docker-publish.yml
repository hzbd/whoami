name: Build and Push Docker Image

# Triggers the workflow on push events to the main branch
on:
  push:
    branches:
      - master
  workflow_dispatch:

env:
  DOCKER_IMAGE: containerpi/whoami

jobs:
  build_and_push:
    # Run the job on the latest ubuntu runner
    runs-on: ubuntu-latest
    # Grant permissions for the job to write to GitHub Packages
    permissions:
      contents: read
      packages: write

    steps:
      # Step 1: Check out the repository code
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Set up QEMU for multi-platform builds
      # This is necessary to emulate ARM architecture on x86 runners
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      # Step 3: Set up Docker Buildx
      # This action creates a builder instance that can build multi-arch images
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Step 4: Log in to Docker Hub
      # Uses secrets to avoid hardcoding credentials
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Step 5: Build and push the Docker image
      # This is the core step that builds for multiple platforms and pushes to the registry
      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          # The build context is the root of the repository
          context: .
          # The Dockerfile to use
          file: ./Dockerfile
          # Define the target platforms
          # linux/amd64 covers standard servers.
          # linux/arm64 covers Raspberry Pi 4B and Apple M-series Macs.
          platforms: linux/amd64,linux/arm64
          # Push the image to the registry after a successful build
          push: true
          # Tag the image with the repository name and 'latest'
          tags: ${{ env.DOCKER_IMAGE }}:latest
          # Use GitHub Actions cache for build layers to speed up subsequent builds
          cache-from: type=gha
          cache-to: type=gha,mode=max
